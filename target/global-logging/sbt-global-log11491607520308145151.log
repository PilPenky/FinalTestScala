[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Admin\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Admin\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.11 (Oracle Corporation Java 21.0.1)
[debug]       Load.loadUnit: plugins took 65.6605ms
[debug]       Load.loadUnit: defsScala took 0.2618ms
[debug] [Loading] Scanning directory C:\Users\Admin\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Admin\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 12.2758 ms
[debug]           Load.resolveProject(global-plugins) took 31.6238ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Admin\.sbt\1.0\plugins, plugins: List(<none>))) took 57.9018ms
[debug] [Loading] Done in C:\Users\Admin\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 75.5524ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.169ms
[debug]     Load.loadUnit(file:/C:/Users/Admin/.sbt/1.0/plugins/, ...) took 149.6989ms
[debug]   Load.apply: load took 281.907ms
[debug]   Load.apply: resolveProjects took 6.2838ms
[debug]   Load.apply: finalTransforms took 50.8632ms
[debug]   Load.apply: config.delegates took 5.7762ms
[debug]   Load.apply: Def.make(settings)... took 305.6784ms
[debug]   Load.apply: structureIndex took 81.7004ms
[debug]   Load.apply: mkStreams took 1.5587ms
[info] loading global plugins from C:\Users\Admin\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1589.0146ms
[debug]           Load.loadUnit: plugins took 13.1139ms
[debug]           Load.loadUnit: defsScala took 0.0031ms
[debug] [Loading] Scanning directory C:\Users\Admin\Desktop\Учёба\Scala programming language\FinalTest\project
[debug]             Load.loadUnit: mkEval took 6.6155ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Admin\Desktop\Учёба\Scala programming language\FinalTest\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.4237 ms
[info] loading settings for project finaltest-build from idea.sbt...
[debug]               Load.resolveProject(finaltest-build) took 8.5939ms
[debug]             Load.loadTransitive: finalizeProject(Project(id finaltest-build, base: C:\Users\Admin\Desktop\Учёба\Scala programming language\FinalTest\project, plugins: List(<none>))) took 10.5462ms
[debug] [Loading] Done in C:\Users\Admin\Desktop\Учёба\Scala programming language\FinalTest\project, returning: (finaltest-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1775.6768ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.6298ms
[debug]         Load.loadUnit(file:/C:/Users/Admin/Desktop/Учёба/Scala%20programming%20language/FinalTest/project/, ...) took 1794.2948ms
[debug]       Load.apply: load took 1796.2424ms
[debug]       Load.apply: resolveProjects took 0.2533ms
[debug]       Load.apply: finalTransforms took 33.4835ms
[debug]       Load.apply: config.delegates took 0.3817ms
[debug]       Load.apply: Def.make(settings)... took 90.6149ms
[debug]       Load.apply: structureIndex took 31.9317ms
[debug]       Load.apply: mkStreams took 0.0029ms
[info] loading project definition from C:\Users\Admin\Desktop\Учёба\Scala programming language\FinalTest\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3011.4532ms
[debug]     Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Users\Admin\Desktop\Учёба\Scala programming language\FinalTest
[debug]       Load.loadUnit: mkEval took 0.3288ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.5303 ms
[info] loading settings for project root from build.sbt...
[debug]         Load.resolveProject(root) took 24.413ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Admin\Desktop\Учёба\Scala programming language\FinalTest, plugins: List(<none>))) took 27.7732ms
[debug] [Loading] Done in C:\Users\Admin\Desktop\Учёба\Scala programming language\FinalTest, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1529.4351ms
[debug]     Load.loadUnit: cleanEvalClasses took 16.1008ms
[debug]   Load.loadUnit(file:/C:/Users/Admin/Desktop/Учёба/Scala%20programming%20language/FinalTest/, ...) took 4557.8338ms
[debug] Load.apply: load took 4565.756ms
[debug] Load.apply: resolveProjects took 0.1142ms
[debug] Load.apply: finalTransforms took 24.5981ms
[debug] Load.apply: config.delegates took 0.2939ms
[debug] Load.apply: Def.make(settings)... took 66.0742ms
[debug] Load.apply: structureIndex took 29.841ms
[debug] Load.apply: mkStreams took 0.0029ms
[info] set current project to Scala programming language (in build file:/C:/Users/Admin/Desktop/Учёба/Scala%20programming%20language/FinalTest/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 50015 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 50015, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Scala programming language (in build file:/C:/Users/Admin/Desktop/Учёба/Scala%20programming%20language/FinalTest/)
[debug] > Exec(idea-shell, None, None)
